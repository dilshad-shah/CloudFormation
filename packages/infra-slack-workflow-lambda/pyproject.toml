[tool.poetry]
name = "infra-slack-workflow-lambda"
version = "0.1.0"
description = "Repository for handling #cloud-infra Slack workflow requests."
authors = ["dmansfield@cvent.com"]

[[tool.poetry.source]]
name = "cvent"
url = "https://nexus.core.cvent.org/nexus/repository/pypi-all/simple"

[tool.poetry.dependencies]
aws-lambda-typing = "^2.10.1"
python = '^3.9'
requests = "^2.28.2"
ipaddress = "^1.0.23"
slack-sdk = "^3.20.0"
types-requests = "^2.28.11.15"
datetime = "^5.0"
pytz = "^2022.7.1"

[tool.poetry.dev-dependencies]
black = "^22.3.0"
flake8 = "^4.0.1"
isort = "^5.10.1"
mypy = "^0.942"
poetryup = "^0.6.1"
pylint = "^2.13.5"
pytest = "^7.1.1"

[tool.poetry.group.dev.dependencies]
boto3 = "^1.26.84"

[tool.black]
line-length = 120

[tool.pylint.messages_control]
max-line-length = 120
disable = ["W1401","C0301","C0114", "C0413", "W0702","C0209","W0613", "W0612", "C0330", "R0201", "R0914", "W1203","R0912", "W1201", "R0801", "W0632", "R0915"]

[tool.pyright]
venvPath = "."
venv = ".venv"
typeCheckingMode = "off"
useLibraryCodeForTypes = true

[tool.isort]
profile = 'black'
multi_line_output = 3

[tool.pytest.ini_options]
testpaths = [ "tests" ]
addopts = "--last-failed --exitfirst -p no:cacheprovider"

[tool.mypy]
strict_optional = false

[[tool.mypy.overrides]]
ignore_missing_imports = true

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
